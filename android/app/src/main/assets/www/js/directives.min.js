(function (target, utils) {
    target.baseDir = function () {
    };
    target.baseDir.prototype.getRootPath = function () {
        return "js/dirViews"
    }
    target.baseDir.prototype.resolvePath = function (path) {
        return this.getRootPath() + path + ".html";
    }

    target.baseDir.prototype.resolveCommonDirectivePath = function (path) {
        return this.getRootPath() + "/01-commons_directives" + path + ".html";
    }

    target.baseDir.prototype.resolveUrl = function (suffix) {
        suffix = utils.encryptUtils.md5(suffix || "");
        var template = "<%= remoteServer %><%= suffix %><%= fixed %>";
        return utils.stringUtils.format(template, {
            remoteServer: gxb.settings.server.remoteServer,
            suffix: suffix,
            fixed: ""
        });
    }
})(gxb.directives, gxb.utils);

(function (target) {
    target.registerNamespace("gxb.directives.uis");
})(gxb.components);

/**
 * Created by lixzh on 4/26/16.
 */

;
(function (target, utils) {
    /*创建一个bindingCtrl*/
    target.uis.uploaderDir = function (parameter) {

        var that = this;
        return {
            restrict: 'E',
            templateUrl: this.resolveCommonDirectivePath('/uploader/uploader'),
            replace: true,
            //require: 'data',
            scope: {
                data: "=data"
            },
            compile: function (element, attrs, transclude) {
                element.attr("id", "uploader_" + utils.generateID());
            },
            controller: ["$scope", "$element", function ($scope, $element) {
                var data = $scope.data;
                var prefixUrl = data.cdnPrefix || "";
                var defaultBucket = data.cdnBucket || "gxb-file"
                $scope.selectorID = "fileselector_" + utils.generateID();
                var uploader = null;
                var _file = null;
                var fileUrl = null;
                $scope.onUpload = function () {
                    if (uploader && _file) {
                        var data = {
                            filename: _file.name,
                            filesize: _file.size,
                            filetype: _file.type,
                            prefix: prefixUrl,
                            bucket: defaultBucket
                        };
                        utils.ajaxUtils.doPost({
                            url: gxb.settings.server.remoteServer+"/cdn/signature/api?access_token="+window.localStorage['accessToken'],
                            data: data,
                            dataType: "text"
                        }).then(function (res) {
                            fileUrl = res;
                            uploader.options.server = res;
                            uploader.options.sendAsBinary = true;
                            uploader.options.method = "PUT";
                            uploader.options.headers = {"x-amz-acl": "public-read","Content-Type":_file.type}
                            uploader.upload();
                        },function(res){
                            alert("post error:" + res);
                        });
                        document.getElementById("loading").style.visibility="visible";
                        document.getElementById("loading").style.opacity=1;
                    }
                }

                var pickButtonIdentifier = (data.fileElementID || ( $scope.selectorID));
                if (pickButtonIdentifier.indexOf(".") !== 0) {
                    pickButtonIdentifier = "#" + pickButtonIdentifier;
                }

                var onload = function () {
                    uploader = WebUploader.create({
                        auto: false,//attrs.autoupload || false,
                        // swf文件路径
                        swf: that.resolvePath('/uploader/Uploader.swf'),

                        // 文件接收服务端。
                        server: '',

                        // 选择文件的按钮。可选。
                        // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                        pick: {
                            id: pickButtonIdentifier,
                            multiple: false
                        },

                        // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！
                        resize: false,
                        accept: data.isImage ? {
                            title: 'Images',
                            extensions: 'gif,jpg,jpeg,bmp,png',
                            mimeTypes: 'image/*'
                        } : {}
                    });
                    uploader.on('beforeFileQueued', function(file){
                        if (!data.isImage || data.isImage&&file.type.indexOf("image")!=-1) {
                            return true;
                        } else {
                            alert("请上传图片格式的文件");
                            return false;
                        }
                    });
                    uploader.on('fileQueued', function (file) {
                        data.onQueued && data.onQueued(file);
                        _file = file;
                        if (data.autoupload) {
                            $scope.onUpload();
                        }
                    });

                    // 文件上传过程中创建进度条实时显示。
                    uploader.on('uploadProgress', function (file, percentage) {
                        data.onProgress && data.onProgress(file, percentage);
                    });

                    // 文件上传成功，给item添加成功class, 用样式标记上传成功。
                    uploader.on('uploadSuccess', function (file) {
                        data.onSuccess && data.onSuccess({
                            file: file,
                            absoluteUrl: utils.urlUtils.getRemoteUrl(fileUrl),
                            relativeUrl: "/" + prefixUrl + "/" + utils.urlUtils.getCDNFile(fileUrl)
                        });

                        //var scopeData = $scope.data;
                        //if (scopeData.cdnBucket == "gxb-image") {
                        //    var _cdnPrefix = scopeData.cdnPrefix || "";
                        //    var _defaultBucket = scopeData.cdnBucket || "gxb-file";
                        //
                        //    var postData = {
                        //        filename: "/" + _cdnPrefix + "/" + utils.urlUtils.getCDNFile(fileUrl),
                        //        bucket: _defaultBucket
                        //    };
                        //
                        //    utils.ajaxUtils.doPost({
                        //        url: that.resolveUrl("/cdn/signature/api"),
                        //        data: postData,
                        //        dataType: "text"
                        //    }).then(function () {
                        //    }, function () {
                        //    })
                        //}
                    });

                    // 文件上传失败，显示上传出错。
                    uploader.on('uploadError', function (file,reason) {
                        document.getElementById("error").style.visibility="visible";
                        document.getElementById("error").style.opacity=1;
                        setTimeout(function(){
                            document.getElementById("error").style.visibility="hidden";
                            document.getElementById("error").style.opacity=0;
                        },1000)
                        data.onError && data.onError(file);
                    });

                    // 完成上传完了，成功或者失败，先删除进度条。
                    uploader.on('uploadComplete', function (file) {
                        document.getElementById("loading").style.visibility="hidden";
                        document.getElementById("loading").style.opacity=0;
                        data.onComplete && data.onComplete(file);
                    });

                }
                onload();
            }]
        };
    };

    /*继承baseCtrl*/
    target.inheritFromDir(target.uis.uploaderDir);

    target.registerDirective("gxbuploader", "gxb.directives.uis.uploaderDir", ['$compile', '$interval']);
})(gxb.directives, gxb.utils);

/**
 * Created by kkb on 17/2/6.
 */
(function (target, utils) {
    /*创建一个bindingCtrl*/
    target.uis.courseGuideDir = function (parameter) {
        var that = this;
        return {
            restrict: 'E',
            templateUrl: this.resolvePath('/courseguide/courseguide'),
            replace: true,
            controller: ["$scope", "$element", function ($scope, $element) {

            }]
        };
    };
    /*继承baseCtrl*/
    target.inheritFromDir(target.uis.courseGuideDir);

    target.registerDirective("courseguide", "gxb.directives.uis.courseGuideDir", []);
})(gxb.directives, gxb.utils);
(function (target, utils) {
  /*创建一个bindingCtrl*/
  target.uis.dayTipDir = function (parameter) {
    var that = this;
    return {
      restrict: 'E',
      templateUrl: this.resolvePath('/daytip/daytip'),
      replace: true,
      controller: ["$scope", "$element", function ($scope, $element) {
        var width = window.screen.availWidth*0.84;
        $element[0].style.height=width*1.443 +'px';
        $element[0].style.marginTop=-width*1.443/2 +20 +'px';

        //share
        $scope.shareTip = function(imageUrl) {
          if (document.getElementById("tipImg").complete == true) {
            gxb.utils.ymStatisticsUtils.ymEvent('everydayTipShare');
            if (imageUrl) {  //如果imageUrl存在说明有人分享过，直接分享即可

              var data = {
                "title": '每日精选',
                "type": 'image',
                "url": imageUrl,
                "text": "高校邦每天为您精选一条优质美文"
              };
              window.plugins.SharePlugin.share(data);

            } else {         //如果不存在说明图片尚未分享过，需要上传后分享出去

              var image = document.getElementById('tipImg');
              var canvas = document.createElement('canvas');
              //定义画布大小
              canvas.width = 632;
              canvas.height = 911;
              var ctx = canvas.getContext('2d');
              ctx.drawImage(image, 0, 0);       // 画背景
              var image2 = document.getElementById('code');
              ctx.drawImage(image2, 42, 760);   //画二维码
              var image3 = document.getElementById('logo');
              ctx.drawImage(image3, 415, 816);  //画logo
              ctx.moveTo(160, 763);
              ctx.lineTo(160, 865);
              ctx.lineWidth = '1';
              ctx.strokeStyle = "#434343";
              ctx.stroke();             //画二维码右边的一条线

              ctx.font = '18px 宋体';
              ctx.fillStyle = '#424244';
              ctx.fillText("长按识别二维码", 180, 835);
              ctx.fillText("免费学经典好课", 180, 862);     //二维码旁边的字

              //名言名句写入canvas画布
              //var text ='努力去做一个有自控力的人。失眠也要早起，郁闷也不要抽烟，身体好也要经常运动。收拾好自己，200%地努力去学习和工作，然后move on。';
              var text = $scope.tips.body;
              ctx.font = '32px arial';
              ctx.fillStyle = "#fff";
              var reg = /^[a-ln-z0-9]+$/;
              var reg1 = /^[A-LN-Z]+$/;
              var arr = text.split("");
              var y = 232;  //定义每个字的x,y坐标
              var x = 107;
              for (var i = 0; i < arr.length; i++) {
                ctx.fillText(arr[i], x, y);
                if (arr[i] == " ") {  //如果是空格占18px
                  x = x + 18
                } else if (reg.test(arr[i])) {  //如果是a-l,n-z,0-9等占20px
                  x = x + 20;
                } else if (reg1.test(arr[i])) {   //如果是A-L,N-Z等占24px
                  x = x + 24;
                } else if (arr[i] == 'w' || arr[i] == 'm') {   //如果是小写w和m的话占位28px
                  x = x + 28;
                } else if (arr[i] == 'W' || arr[i] == 'M') {   //如果是大写W和M的话占位30px
                  x = x + 30;
                } else {      //如果是汉字或者标点符号等占位32px
                  x = x + 32;
                }
                if (x > 512) {  //如果x坐标超过512折行
                  x = 107;
                  y += 40;
                }
              }

              //来源写入canvas画布
              var text2 = " " + $scope.tips.title;
              var arr2 = text2.split("");

              var left = 570 - arr2.length * 22 - 43 - 44;
              ctx.moveTo(left, 534);
              ctx.lineTo(left + 43, 534);
              ctx.strokeStyle = '#fff';
              ctx.stroke();
              //var text2 = " 张嘉佳《从你的全世界路过》";

              ctx.font = '22px 宋体';
              for (var j = 0; j < arr2.length; j++) {
                ctx.fillText(arr2[j], left + 43 + j * 22, 544)
              }

              var image4 = new Image();
              image4.id = "uploadTip";  //定义id是为了上传以后把页面中的img删除掉
              image4.width = image.width;
              image4.height = image.height;
              image4.src = canvas.toDataURL('image/png');
              var dataUrl = canvas.toDataURL('image/png');
              document.body.appendChild(image4);
              var imageData = encodeURIComponent(dataUrl);

              var today = new Date();
              var year = today.getFullYear();
              var month = today.getMonth() + 1 < 10 ? "0" + (today.getMonth() + 1) : today.getMonth() + 1;
              var ym = year + "/" + month;
              var dataForm = new FormData();
              dataForm.append("suffix", 'png');
              dataForm.append("strBase64", imageData);
              dataForm.append("path", "/uploads/appshare/" + ym);
              document.body.removeChild(image4);

              gxb.utils.ajaxUtils.doPost({
                url: gxb.settings.server.remoteServer + "/upload/popImage/api?imgSmall=1",
                data: dataForm,
                contentType: false,
                processData: false
              }).then(function (res) {
                if (res.status == '0') {
                  var data = {
                    "title": '每日精选',
                    "type": 'image',
                    "url": res.data,
                    "text": "高校邦每天为您精选一条优质美文"
                  };
                  window.plugins.SharePlugin.share(data);
                } else {
                  alert(res.message);
                }
              });

            }


          }else{
            return false;
          }
        }

      }]
    };
  };
  /*继承baseCtrl*/
  target.inheritFromDir(target.uis.dayTipDir);

  target.registerDirective("daytip", "gxb.directives.uis.dayTipDir", []);
})(gxb.directives, gxb.utils);
(function (target, utils) {
  /*创建一个bindingCtrl*/
  target.uis.loadingDir = function (parameter) {
    var that = this;
    return {
      restrict: 'E',
      templateUrl: this.resolvePath('/loading/loading'),
      replace: true,
      controller: ["$scope", "$element", function ($scope, $element) {

      }]
    };
  };
  /*继承baseCtrl*/
  target.inheritFromDir(target.uis.loadingDir);

  target.registerDirective("loading", "gxb.directives.uis.loadingDir", []);
})(gxb.directives, gxb.utils);
(function (target, utils) {
  /*创建一个bindingCtrl*/
  target.uis.networkDir = function (parameter) {
    var that = this;
    return {
      restrict: 'E',
      templateUrl: this.resolvePath('/network/network'),
      replace: true,
      controller: ["$scope", "$element", function ($scope, $element) {

      }]
    };
  };
  /*继承baseCtrl*/
  target.inheritFromDir(target.uis.networkDir);

  target.registerDirective("network", "gxb.directives.uis.networkDir", []);
})(gxb.directives, gxb.utils);
(function (target, utils) {
  /*创建一个bindingCtrl*/
  target.uis.uploadAvatarDir = function (parameter) {
    var that = this;
    return {
      restrict: 'E',
      templateUrl: this.resolvePath('/uploadavatar/uploadavatar'),
      replace: true,
      controller: ["$state","$scope", "$element",'$stateParams', function ($state,$scope, $element,$stateParams) {
        $element.on('change', function () {
          var myFile = $element[0].files[0];
          var max_height = 1000;
          if (myFile) {
            var fileType = myFile.type || null;
            var fileType1 =myFile.type.split("/")[1]
            var imgRegex = /(\.|\/)(gif|jpe?g|png|bmp)$/i;
            if(!imgRegex.test(fileType)){
              document.getElementById("errorImg").style.visibility="visible";
              document.getElementById("errorImg").style.opacity=1;
              setTimeout(function(){
                document.getElementById("errorImg").style.visibility="hidden";
                document.getElementById("errorImg").style.opacity=0;
              },1000)
            }else{
              var image = new Image();
              image.onload = function () {
                document.getElementById("loading").style.visibility="visible";
                document.getElementById("loading").style.opacity=1;
                // image.width=70;
                // image.height=70;
                if (image.height > max_height) {
                  //进行压缩
                  image.width *= max_height / image.height;
                  image.height = max_height;
                }
                var canvas = document.createElement('canvas');
                canvas.id = "myCanvas";
                var ctx = canvas.getContext("2d");
                canvas.width = image.width;
                canvas.height = image.height;
                ctx.drawImage(image, 0, 0, image.width, image.height);
                document.body.appendChild(canvas);
                var dataurl = canvas.toDataURL(fileType);
                var imagedata = encodeURIComponent(dataurl);

                var dataForm = new FormData();
                dataForm.append('suffix',fileType1);
                dataForm.append('strBase64',imagedata);
                document.body.removeChild(canvas);

                var date = new Date();
                var year = date.getFullYear();
                var month = date.getMonth()+1;
                var today = date.getDate();
                var path = "correct/image/"+String(year).substr(2)+(String(month).length == 1?"0"+month:month)+"/"+today+"/";
                gxb.utils.ajaxUtils.doPost({
                  url: gxb.settings.server.remoteServer + "/user/uploadAvatar?path="+path+"&imgSmall=1&bucket=gxb-file&access_token="+window.localStorage['accessToken'],
                  data: dataForm,
                  contentType: false,
                  processData: false
                }).then(function (res) {
                  if(res.status=="0"){
                    $element[0].parentNode.getElementsByTagName("img")[0].setAttribute('src',dataurl);
                    var userObj = gxb.utils.jsonUtils.toObject(window.localStorage['userObject']);
                    userObj.avatar = gxb.settings.cdn.wangsu.getDomains().defaultBucketDomain + res.data;
                    window.localStorage.userObject=gxb.utils.jsonUtils.toString(userObj);
                    document.getElementById("loading").style.visibility="hidden";
                    document.getElementById("loading").style.opacity=0;
                    //$state.go('cloudcorrection_upload',{"dataurl":res.data,"id":classId},{reload:true});
                  }else{
                    document.getElementById("error").style.visibility="visible";
                    document.getElementById("error").style.opacity=1;
                    setTimeout(function(){
                      document.getElementById("error").style.visibility="hidden";
                      document.getElementById("error").style.opacity=0;
                    },1000)
                  }

                })
              };
              var fr = new FileReader();
              fr.onload = function () {
                image.src = fr.result;

              };
              fr.readAsDataURL(myFile);
            }

          }

        })
      }]
    };
  };
  /*继承baseCtrl*/
  target.inheritFromDir(target.uis.uploadAvatarDir);

  target.registerDirective("uploadavatar", "gxb.directives.uis.uploadAvatarDir", []);
})(gxb.directives, gxb.utils);
(function (target, utils) {
    /*创建一个bindingCtrl*/
    target.uis.uploadFileDir = function (parameter) {
        var that = this;
        return {
            restrict: 'E',
            templateUrl: this.resolvePath('/uploadfile/uploadfile'),
            replace: true,
            controller: ["$state","$scope", "$element",'$stateParams', function ($state,$scope, $element,$stateParams) {
                $element.on('change', function () {
                    var classId = $stateParams.id;
                    var max_height = 1000;
                    var myFile = $element[0].files[0];
                    if (myFile) {
                        var fileType = myFile.type || null;
                        var fileType1 =myFile.type.split("/")[1]
                        var imgRegex = /(\.|\/)(gif|jpe?g|png|bmp)$/i;
                        if(!imgRegex.test(fileType)){
                            document.getElementById("errorImg").style.visibility="visible";
                            document.getElementById("errorImg").style.opacity=1;
                            setTimeout(function(){
                                document.getElementById("errorImg").style.visibility="hidden";
                                document.getElementById("errorImg").style.opacity=0;
                            },1000)
                        }else{
                            var image = new Image();
                            image.onload = function () {
                                document.getElementById("loading").style.visibility="visible";
                                document.getElementById("loading").style.opacity=1;
                                if (image.height > max_height) {
                                    //进行压缩
                                    image.width *= max_height / image.height;
                                    image.height = max_height;
                                }

                                var canvas = document.createElement('canvas');
                                canvas.id = "myCanvas";
                                //var canvas = document.getElementById("myCanvas");
                                var ctx = canvas.getContext("2d");
                                canvas.width = image.width;
                                canvas.height = image.height;
                                ctx.drawImage(image, 0, 0, image.width, image.height);
                                document.body.appendChild(canvas);
                                var dataurl = canvas.toDataURL(fileType);
                                var imagedata = encodeURIComponent(dataurl);

                                var dataForm = new FormData();
                                //dataForm.append('file',myFile);
                                dataForm.append('suffix',fileType1);
                                dataForm.append('strBase64',imagedata);

                                document.body.removeChild(canvas);
                                var date = new Date();
                                var year = date.getFullYear();
                                var month = date.getMonth()+1;
                                var today = date.getDate();
                                var path = "correct/image/"+String(year).substr(2)+(String(month).length == 1?"0"+month:month)+"/"+today+"/";
                                var accessToken = parameter.$pluginComponents.$accessToken.get();
                                gxb.utils.ajaxUtils.doPost({
                                    url:gxb.settings.server.remoteServer+"/upload/base64/api?path="+path+"&bucket=gxb-file&imgSmall=1&access_token="+accessToken,
                                    //url: gxb.settings.server.remoteServer + "/cdn/image/uploadImage?imgName="+myFile.name,
                                    data: dataForm,
                                    contentType: false,
                                    processData: false
                                }).then(function (res) {
                                    if(res.status==="0"){
                                        document.getElementById("loading").style.visibility="hidden";
                                        document.getElementById("loading").style.opacity=0;
                                        $state.go('cloudcorrection_upload',{"dataurl":res.data,"id":classId},{reload:true});
                                    }else{
                                        document.getElementById("error").style.visibility="visible";
                                        document.getElementById("error").style.opacity=1;
                                        setTimeout(function(){
                                            document.getElementById("error").style.visibility="hidden";
                                            document.getElementById("error").style.opacity=0;
                                        },1000)
                                    }

                                })
                            };
                            var fr = new FileReader();
                            fr.onload = function () {
                                image.src = fr.result;

                            };
                            fr.readAsDataURL(myFile);
                        }

                    }

                })
            }]
        };
    };
    /*继承baseCtrl*/
    target.inheritFromDir(target.uis.uploadFileDir);

    target.registerDirective("uploadfile", "gxb.directives.uis.uploadFileDir", []);
})(gxb.directives, gxb.utils);